import os
try:   
    import asyncio
    import random
    import subprocess
    import sys
    import webbrowser
    import nextcord
    from nextcord.ext import commands
    import undetected_chromedriver as uc
    import aiohttp
    from psutil import process_iter
    import requests
    import json
    from os import listdir
    from os.path import isfile, join
    import datetime
    from datetime import date
    from datetime import datetime
    import threading
    import shutil
    import pyautogui as pg
    import time
    import wget
    from PIL import ImageGrab
    import psutil
    import zipfile
    from selenium import webdriver
except:
    os.system('pip install asyncio')
    os.system('pip install subprocess')
    os.system('pip install webbrowser')
    os.system('pip install nextcord')
    os.system('pip install shutil')
    os.system('pip install wget')
    os.system('pip install aiohttp')
    os.system('pip install datetime')
    os.system('pip install psutil')
    os.system('pip install undetected_chromedriver')
    os.system('pip install pyautogui')
    os.system('pip install selenium')
    os.system('pip install win32gui')
    os.system('pip install Image')
    import asyncio
    import random
    import subprocess
    import sys
    import webbrowser
    import nextcord
    from nextcord.ext import commands
    import undetected_chromedriver as uc
    import aiohttp
    from psutil import process_iter
    import requests
    import json
    from os import listdir
    from os.path import isfile, join
    import datetime
    from datetime import date
    from datetime import datetime
    import threading
    import shutil
    import pyautogui as pg
    import time
    import wget
    from PIL import ImageGrab
    import psutil
    import zipfile
    from selenium import webdriver
try:
    config1=json.load(open('config.json','r', encoding='utf8'))
    webhookurl=config1['webhook_url']
    token=config1['Bot_Token']
    try:
        RawCookie=config1['Roblox_Cookie']
    except:
        print('Config Error Roblox Cookie')
        input()
        quit()
    try:
        channelid=config1['Channel_Id']
        backlstchannelid = [995504657835229306,1051677991563968523,1053655365734109214,1053911692335128676,1077957217514426511,1096641601419366490,952376860011036692,944876713165336606,1096323267293352057,944866662090416138,1096773825326227506,1063851763033178112,1074253972703027270,1040867046503759933,944870120013045766,944866662090416139,1015596176965386260,1043002169865027594]
        if config1['Channel_Id'] in backlstchannelid:
            print('Config Error Back List Channel Id')
            input()
            quit()
    except:
        print('Config Error Channel Id')
        input()
        quit()
    try:
        syx=config1['Syx_Part']
        if syx == "":syxrun=False
        else:syxrun=True
    except:syxrun=False
except:
    print('config error')
    input()
    quit()
try:
    global yytt,ee,driver,removepo
    ee = []
    yytt=True
    loca = sys.argv[0]
    removepo=100
    appdata_dir = os.getenv("APPDATA")
    bot = commands.Bot(help_command=None)
    aa1211 = nextcord.Embed(title='เปิด-ปิด การ เปิด-ปิด เกม Roblox')
    g1 = nextcord.ui.Button(label="เปิดเข้า Blox Fruits", style=nextcord.ButtonStyle.green)
    g2 = nextcord.ui.Button(label="เปิด Roblox Player", style=nextcord.ButtonStyle.green)  
    g3 = nextcord.ui.Button(label="เปิด web Roblox", style=nextcord.ButtonStyle.green)
    g4 = nextcord.ui.Button(label="เข้า-ออก ทุก 20 นาที", style=nextcord.ButtonStyle.green)
    on = nextcord.ui.Button(label="เปิด", style=nextcord.ButtonStyle.green)
    off = nextcord.ui.Button(label="ปิด", style=nextcord.ButtonStyle.red)
except:
    print('Error global, Button')
    input()
    quit()
async def logsend(embed):
    try:
        async with aiohttp.ClientSession() as session:
            webhook = nextcord.Webhook.from_url(webhookurl, session=session)
            await webhook.send(embed=embed)
    except:
        for pp in range(100):
            print('Web Hook Error')
        input()
        quit()
def cappopen(appname):
    p=0
    for process in process_iter():
        if any(procstr in process.name() for procstr in appname):
            p+=1
    if p >= 1 :return nextcord.ButtonStyle.green
    if p <= 1 :return nextcord.ButtonStyle.red
def ctemp():
    try:
        Green        = "\033[32m"
        #folder = 'C:/Users/'+os.getlogin()+'/AppData/Local/Temp'
        fere =['C:/Users/'+os.getlogin()+'/AppData/Local/Temp','C:/Windows/Temp']
        deleteFileCount = 0
        deleteFolderCount = 0
        eeeee="```Diff\n"
        faile = 0
        #os.system('del /s /f /q c:\windows\temp\*.*')
        #os.system('del /s /f /q c:\WINDOWS\Prefetch')
        for folder in fere:
            for the_file in os.listdir(folder):
                file_path = os.path.join(folder, the_file)
                indexNo = file_path.find('\\')
                itemName = file_path[indexNo+1:]
                try:
                    if os.path.isfile(file_path):
                        os.unlink(file_path)
                        print(f'{Green}Success: deleted file {itemName}')
                        eeeee+=f"+ Success: deleted file {itemName}\n"
                        deleteFileCount = deleteFileCount + 1
                    elif os.path.isdir(file_path):
                        if file_path.__contains__('chocolatey'):  continue
                        shutil.rmtree(file_path)
                        eeeee+=f"+ Success: deleted folder {itemName}\n"
                        print(f'{Green}Success: deleted folder {itemName}')
                        deleteFolderCount = deleteFolderCount + 1
                except Exception as e:
                    print(e)
                    eeeee+=f"- Fail: deleted folder {itemName}\n"
                    faile+=1
        eeeee+="+deleted "+str(deleteFileCount)+' files and '+ str(deleteFolderCount)+' folders.'
        eeeee+="```"
        
        payload = {
        "content": "log temp",
        "embeds": [
            {
                "title": "Temp",
                "description": eeeee,
                "color": 16711680,
            }
            ]
        }
        response = requests.post(webhookurl, data=json.dumps(payload), headers={"Content-Type": "application/json"})

        return ("deleted "+str(deleteFileCount)+' files and '+ str(deleteFolderCount)+' folders.')
        #wait interaction.send(f"Fail {faile}.")
    except Exception as e:
            return 'Error'+e
def getnamesyx():
    if syxrun:
        global ee
        mypath = f'{syx}/bin'
        onlyfiles = [f for f in os.listdir(mypath) if os.path.isfile(os.path.join(mypath, f))]
        for oo in onlyfiles:
            if 'CefSharp.BrowserSubprocess.exe' in oo or 'lua-decomp.exe' in oo:return
            if oo.endswith('.exe'):ee.append(oo)
def joingame(RawCookie):
    try:
        Gamesession = requests.session()
        Gamesession.cookies[".ROBLOSECURITY"] = RawCookie
        Gamesession = Gamesession.post(url = 'https://auth.roblox.com/v1/authentication-ticket/',headers = {"Referer": "https://www.roblox.com/","X-CSRF-Token": Gamesession.post(url = "https://auth.roblox.com/v1/authentication-ticket/").headers["X-CSRF-Token"],}).headers["RBX-Authentication-Ticket"]
        PlaceId = 2753915549
        BrowserID = random.randint(10000000,99999999)
        webbrowser.open(f"roblox-player:1+launchmode:play+gameinfo:{Gamesession}+launchtime:1+placelauncherurl:https%3A%2F%2Fassetgame.roblox.com%2Fgame%2FPlaceLauncher.ashx%3Frequest%3DRequestGame%26browserTrackerId%3D{BrowserID}%26placeId%3D{PlaceId}%26isPlayTogetherGame%3Dfalse+browsertrackerid:{BrowserID}+robloxLocale:en_us+gameLocale:en_us")
    except:pass
def countdown(t):
    global ggggg
    while t:
        if ggggg:
            mins, secs = divmod(t, 60)
            timer = '{:02d}:{:02d}'.format(mins, secs)
            print(f"Re LogIn : {timer}", end="\r")
            time.sleep(1)
            t -= 1
        else:
            t -= t
def youtube1():
    global ggfdf
    while  ggfdf:
        if chackimg('2') == 'ok':
            eeeee=pg.position()
            e6 = pg.locateCenterOnScreen('./lib/2.png')
            print(e6)
            pg.click(e6)
            pg.moveTo(eeeee)
        else:pass
        time.sleep(2)
def chackimg(img):
    eeeee=pg.position()
    wandb=pg.locateCenterOnScreen(f'./lib/{img}.png')
    pg.moveTo(wandb)
    eeee=pg.position()
    if eeee == wandb:
        pg.moveTo(eeeee)
        return 'ok'
    else:
        return 'err'
def get_rcs_path():
    riot_installs_path = os.path.expandvars("%PROGRAMDATA%\\Riot Games\\RiotClientInstalls.json")
    try:
        with open(riot_installs_path, "r") as file:
            client_installs = json.load(file)
            rcs_path = os.path.abspath(client_installs["rc_default"])
            if not os.access(rcs_path, os.X_OK):
                return None
            return rcs_path
    except FileNotFoundError:
        return None
def openroblox():
    try:
        driver=driver = uc.Chrome(use_subprocess=True)
    except:
        try:
            driver=webdriver.Chrome(executable_path=r'chromedriver.exe')
        except:
            url = 'https://chromedriver.storage.googleapis.com/LATEST_RELEASE'
            response = requests.get(url)
            version_number = response.text
            download_url = "https://chromedriver.storage.googleapis.com/" + version_number +"/chromedriver_win32.zip"
            latest_driver_zip = wget.download(download_url,'chromedriver.zip')
            with zipfile.ZipFile(latest_driver_zip, 'r') as zip_ref:zip_ref.extractall()
            os.remove(latest_driver_zip)
            driver=webdriver.Chrome(executable_path=r'chromedriver.exe')
    return driver
def robloxlogincookie():
    global driver
    driver=openroblox()
    driver.get('https://web.roblox.com/home')
    driver.maximize_window()
    try:
        driver.add_cookie({'domain': '.roblox.com', 'expiry': 1702204934, 'httpOnly': True,'name': '.ROBLOSECURITY', 'path': '/', 'secure': True, "value": RawCookie})
    except:
        print("cookie error")
    driver.get('https://web.roblox.com/home')
    while True:
        time.sleep(300)
def gfgggg(many,url):
    def youtubeviwe():
        global driver
        driver=openroblox() 
        driver.get(url)
        time.sleep(9)
        while True:
            driver.refresh()
            time.sleep(8)
    for iii in range(int(many)):
        threading.Thread(target=youtubeviwe).start() 
        time.sleep(2)
def disk_data():
    disk = ("{:<9} "*4).format("Drive", "Free", "Total", "Use%") + "\n"
    for part in psutil.disk_partitions(all=False):  
        if os.name == 'nt':
            if 'cdrom' in part.opts or part.fstype == '':continue
        usage = psutil.disk_usage(part.mountpoint)
        disk += ("{:<9} "*4).format(part.device, str(usage.free // (2**30)) + "GB", str(usage.total // (2**30)) + "GB", str(usage.percent) + "%") + "\n"
    return disk
def noone():
    global ggggg
    e=0
    while ggggg:joingame(RawCookie);print(f'login {e}');countdown(1200);os.system("taskkill/im RobloxPlayerBeta.exe /F");e+=1
class Bypass(nextcord.ui.Modal):
    def __init__(self):
        super().__init__("Url Bypass")  
        self.url = nextcord.ui.TextInput(
            label="Url",
            required=True
        )
        self.add_item(self.url)
    async def callback(self, interaction: nextcord.Interaction):
        asd = requests.post("https://api.bypass.vip/",json={"url": self.url.value},headers={'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Mobile Safari/537.36'})
        done = f"""
        Old Link  : {asd.json()['query']}
        Medthod   : {asd.json()['website']}
        Bypass To : {asd.json()['destination']}
        """
        ww=nextcord.Embed(title="By Pass", description=done)
        await interaction.send(embed=ww)
        await logsend(ww)
class youtubev(nextcord.ui.Modal):
    def __init__(self):
        super().__init__("Youtube View")  
        self.url = nextcord.ui.TextInput(
            label="Url Youtube Video",
            required=True
        )
        self.many = nextcord.ui.TextInput(
            label="จำนวนจอ",
            required=True
        )
        self.add_item(self.url)
        self.add_item(self.many)
    async def callback(self, interaction: nextcord.Interaction):
        try:
            await interaction.send('สำเร็จ')
            threading.Thread(target=gfgggg,args=(self.many.value,self.url.value)).start()
        except:await interaction.send('ไม่สำเร็จ')
class endpg(nextcord.ui.Modal):
    def __init__(self):
        super().__init__("Task Kill")  
        self.exe = nextcord.ui.TextInput(
            label="exe name ex[valorant.exe]",
            required=True
        )
        self.add_item(self.exe)
    async def callback(self, interaction: nextcord.Interaction):
        try:
            os.system(f'taskkill/im {self.exe.value} /F')
            await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
class Shutdown1(nextcord.ui.Modal):
    def __init__(self):
        super().__init__("Set Shutdown Time")  
        self.tt = nextcord.ui.TextInput(
            label="Set Shutdown Time",
            required=True
            )
        self.add_item(self.tt)
    async def callback(self, interaction: nextcord.Interaction):
        try:os.system(f'SHUTDOWN /s /f /t {self.tt.value}');await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
class capp(nextcord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    @nextcord.ui.button(label="Valorant", style=nextcord.ButtonStyle.red, custom_id="c1")
    async def c1(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:
            os.system('taskkill/im RiotClientServices.exe /F')
            os.system('taskkill/im VALORANT.exe /F')
            await interaction.send('สำเร็จ')
        except:
            await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Roblox", style=nextcord.ButtonStyle.red, custom_id="c2")
    async def c2(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:
            os.system('taskkill/im RobloxPlayerLauncher.exe /F')
            os.system('taskkill/im RobloxPlayerBeta.exe /F')
            await interaction.send('สำเร็จ')
        except:
            await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Synapse Launcher", style=nextcord.ButtonStyle.red, custom_id="c3")
    async def c3(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:    
            mypath = f'{syx}/bin'
            onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]
            for oo in onlyfiles:
                if 'CefSharp.BrowserSubprocess.exe' in oo or 'lua-decomp.exe' in oo :return
                if 'exe' in oo:
                    os.system(f'taskkill/im {oo} /F')
            await interaction.send('สำเร็จ')
        except:
            await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Multiple_ROBLOX", style=nextcord.ButtonStyle.red, custom_id="c4")
    async def c4(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:
            os.system('taskkill/im Multiple_ROBLOX.exe /F')
            await interaction.send('สำเร็จ')
        except:
            await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="TLauncher", style=nextcord.ButtonStyle.red, custom_id="c5")
    async def c5(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:
            os.system('taskkill/im javaw.exe /F')
            os.system('taskkill/im TLauncher.exe /F')
            await interaction.send('สำเร็จ')
        except:
            await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="out app", style=nextcord.ButtonStyle.gray, custom_id="c6")
    async def c6(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:await interaction.response.send_modal(endpg())
        except:await interaction.send('ไม่สำเร็จ')
class mysystem(nextcord.ui.View):
    def __init__(self):super().__init__(timeout=None)
    @nextcord.ui.button(label="check Pc", style=nextcord.ButtonStyle.red, custom_id="check Pc")
    async def b1(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:
            Embed = nextcord.Embed(title = 'System Resource Usage', description = 'See CPU and memory usage of the system.')
            Embed.add_field(name = 'CPU Usage', value = f'{str(psutil.cpu_percent(4))}%', inline = False)
            Embed.add_field(name = 'Memory Usage', value = f'{str(psutil.virtual_memory().percent)}%', inline = False)
            Embed.add_field(name = 'Available Memory', value = f'{psutil.virtual_memory().available * 100 / psutil.virtual_memory().total}%', inline = False)
            Embed.add_field(name = 'Disk', value = disk_data(), inline = False)
            await interaction.send(embed=Embed);await logsend(Embed)
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Crash Pc", style=nextcord.ButtonStyle.red, custom_id="Crash Pc")
    async def s1(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:os.system(':crash\nstart\ngoto crash');await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Lock", style=nextcord.ButtonStyle.red, custom_id="Lock")
    async def s2(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:os.system('SHUTDOWN /l');await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Restart", style=nextcord.ButtonStyle.red, custom_id="Restart")
    async def s3(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:os.system('SHUTDOWN -r -t 10');await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Hibernate", style=nextcord.ButtonStyle.red, custom_id="Hibernate")
    async def s4(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:os.system('SHUTDOWN /h');await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Shutdown", style=nextcord.ButtonStyle.red, custom_id="Shutdown")
    async def s5(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:await interaction.response.send_modal(Shutdown1())
        except:await interaction.send('ไม่สำเร็จ')
class openapp(nextcord.ui.View):
    def __init__(self):super().__init__(timeout=None)
    @nextcord.ui.button(label="Valorant", style=nextcord.ButtonStyle.red, custom_id="game1")
    async def app1(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:subprocess.Popen([get_rcs_path(), '--launch-product=valorant','--launch-patchline=live']);await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Roblox", style=nextcord.ButtonStyle.gray, custom_id="game2")
    async def app2(self, button: nextcord.Button, interaction: nextcord.Interaction):
        embed = nextcord.Embed(title='เลือกวิธีการเปิด Roblox')
        version = requests.get("http://setup.roblox.com/version.txt").content.decode("ascii")
        path = os.getenv("LOCALAPPDATA") + "\\Roblox\\Versions\\" + version
        async def g1_callback(interaction: nextcord.Interaction):joingame(RawCookie);await interaction.send('สำเร็จ')
        async def g2_callback(interaction: nextcord.Interaction):
            try:subprocess.Popen([f'' + path + '\\RobloxPlayerLauncher.exe','-app']);await interaction.send('สำเร็จ')
            except:await interaction.send('ไม่สำเร็จ')
        async def g3_callback(interaction: nextcord.Interaction):
            try:webbrowser.open('https://web.roblox.com/');await interaction.send('สำเร็จ')
            except:await interaction.send('ไม่สำเร็จ')
        async def g4_callback(interaction: nextcord.Interaction):
            asdaw = nextcord.ui.View() 
            async def aw_callback(interaction: nextcord.Interaction):
                try:global ggggg;ggggg=True;threading.Thread(target=noone).start() 
                except:await interaction.send('ไม่สำเร็จ')
            async def da_callback(interaction: nextcord.Interaction):
                try:global ggggg;ggggg=False
                except:await interaction.send('ไม่สำเร็จ')
            on.callback = aw_callback;off.callback = da_callback;asdaw.add_item(on);asdaw.add_item(off);await interaction.send(embed=aa1211, view=asdaw)
        g1.callback = g1_callback
        g2.callback = g2_callback
        g3.callback = g3_callback
        g4.callback = g4_callback
        myview = nextcord.ui.View() 
        myview.add_item(g1)
        myview.add_item(g2)
        myview.add_item(g3)
        myview.add_item(g4)
        msg = await interaction.send(embed=embed, view=myview) 
    @nextcord.ui.button(label="Synapse Launcher", style=nextcord.ButtonStyle.red, custom_id="Synapse Launcher")
    async def app3(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:subprocess.Popen([f"{syx}/Synapse Launcher.exe"]);await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="Multiple_ROBLOX", style=nextcord.ButtonStyle.blurple, custom_id="Multiple_ROBLOX")
    async def app4(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:subprocess.Popen(["./lib/Multiple_ROBLOX.exe"]);await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="TLauncher", style=nextcord.ButtonStyle.green, custom_id="TLauncher")
    async def app5(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:subprocess.Popen([f"{appdata_dir}/.minecraft/TLauncher.exe"]);await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
class dSettings(nextcord.ui.View):
    def __init__(self):super().__init__(timeout=None)
    @nextcord.ui.button(label="close Console", style=nextcord.ButtonStyle.red, custom_id="close Console")
    async def Settingsaa2(self, button: nextcord.Button, interaction: nextcord.Interaction): 
        try:os.system('cls' if os.name == 'nt' else 'clear');print(f'BOT NAME : {bot.user}');await interaction.send('สำเร็จ')
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="quit", style=nextcord.ButtonStyle.red, custom_id="quit")
    async def Settings22(self, button: nextcord.Button, interaction: nextcord.Interaction): 
        await interaction.send(embed=nextcord.Embed(title='quit...')) 
        channel = bot.get_channel(channelid)    
        async for message in channel.history(limit=None):await message.delete()
        global yytt;yytt=False;quit()
class sselenium(nextcord.ui.View):
    def __init__(self):super().__init__(timeout=None)
    @nextcord.ui.button(label="Roblox", style=nextcord.ButtonStyle.green, custom_id="Roblox")
    async def sselenium1(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:await interaction.send('สำเร็จ');threading.Thread(target=robloxlogincookie).start()
        except:await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="youtube view", style=nextcord.ButtonStyle.green, custom_id="youtube view")
    async def sselenium2(self, button: nextcord.Button, interaction: nextcord.Interaction):
        try:
            await interaction.response.send_modal(youtubev())
        except:
            await interaction.send('ไม่สำเร็จ')
    @nextcord.ui.button(label="quit selenium", style=nextcord.ButtonStyle.red, custom_id="quit selenium")
    async def quitselenium(self, button: nextcord.Button, interaction: nextcord.Interaction):
        global driver
        try:
            driver.quit()
            await interaction.send('สำเร็จ')
        except:
            await interaction.send('ไม่สำเร็จ')
class out(nextcord.ui.View):
    def __init__(self):super().__init__(timeout=None)
    @nextcord.ui.button(label="no youube time out", style=nextcord.ButtonStyle.blurple, custom_id="no youube time out")
    async def out1(self, button: nextcord.Button, interaction: nextcord.Interaction):
        async def o1_callback(interaction: nextcord.Interaction):
            global removepo
            removepo+=100
            try:
                global ggfdf
                ggfdf=True
                threading.Thread(target=youtube1).start() 
                await interaction.send('สำเร็จ')
            except:await interaction.send('ไม่สำเร็จ')
        async def o2_callback(interaction: nextcord.Interaction):
            global removepo
            removepo+=100
            try:
                global ggfdf
                ggfdf=False
                await interaction.send('สำเร็จ')
            except:await interaction.send('ไม่สำเร็จ')
        on.callback = o1_callback
        off.callback = o2_callback
        myview = nextcord.ui.View() 
        myview.add_item(on)
        myview.add_item(off)
        await interaction.send(embed=nextcord.Embed(title='การกดปิด time out ของ youube อัตโนมัติ'), view=myview)
    @nextcord.ui.button(label="delete windows temp files", style=nextcord.ButtonStyle.blurple, custom_id="delete windows temp files")
    async def out2(self, button: nextcord.Button, interaction: nextcord.Interaction):
            try:
                await interaction.send('กำลังลบไฟล์ Temp ปุ่มทั้งหมดอาดใช้งานไม่ได้ชั้วคราว')
                await interaction.send(ctemp())
            except:
                await interaction.send('ไม่สำเร็จ')
class mainmanu(nextcord.ui.View):
    def __init__(self):super().__init__(timeout=None)
    @nextcord.ui.button(label="open app", style=nextcord.ButtonStyle.blurple, custom_id="open app")
    async def m1(self, button: nextcord.Button, interaction: nextcord.Interaction):await interaction.send(embed=nextcord.Embed(title="App Open", color=0x04ff00), view=openapp())
    @nextcord.ui.button(label="My System", style=nextcord.ButtonStyle.blurple, custom_id="My System")
    async def m2(self, button: nextcord.Button, interaction: nextcord.Interaction):await interaction.send(embed=nextcord.Embed(title="My System", color=0x04ff00), view=mysystem())
    @nextcord.ui.button(label="close app", style=nextcord.ButtonStyle.blurple, custom_id="close app")
    async def m3(self, button: nextcord.Button, interaction: nextcord.Interaction):await interaction.send(embed=nextcord.Embed(title="close app", color=0x04ff00), view=capp())
    @nextcord.ui.button(label="By Pass Url", style=nextcord.ButtonStyle.red, custom_id="bypass")
    async def bypass(self, button: nextcord.Button, interaction: nextcord.Interaction):await interaction.response.send_modal(Bypass())
    @nextcord.ui.button(label="out", style=nextcord.ButtonStyle.green, custom_id="out")
    async def outf(self, button: nextcord.Button, interaction: nextcord.Interaction):await interaction.send(embed=nextcord.Embed(title="out", color=0x04ff00), view=out())
    @nextcord.ui.button(label="selenium", style=nextcord.ButtonStyle.green, custom_id="selenium")
    async def sim(self, button: nextcord.Button, interaction: nextcord.Interaction):await interaction.send(embed=nextcord.Embed(title="Selenium", color=0x04ff00), view=sselenium())
    @nextcord.ui.button(label="screenshot", style=nextcord.ButtonStyle.gray, custom_id="screenshot")
    async def sim2(self, button: nextcord.Button, interaction: nextcord.Interaction):
        myscreen = ImageGrab.grab()
        myscreen.save('./lib/screenshot.png')
        await interaction.send(file=nextcord.File(fp='./lib/screenshot.png'))
        os.remove('./lib/screenshot.png')
    @nextcord.ui.button(label="Settings", style=nextcord.ButtonStyle.red, custom_id="Settings")
    async def Settings(self, button: nextcord.Button, interaction: nextcord.Interaction):await interaction.send(embed=nextcord.Embed(title="Settings", color=0x04ff00), view=dSettings())
    @nextcord.ui.button(label="delete all message", style=nextcord.ButtonStyle.red, custom_id="delete all message")
    async def delmeg(self, button: nextcord.Button, interaction: nextcord.Interaction):
        channel = bot.get_channel(channelid)    
        async for message in channel.history(limit=None):await message.delete()
        await channel.send(embed=nextcord.Embed(title="Main Manu", color=0x04ff00), view=mainmanu())
@bot.event
async def on_ready():
    bot.add_view(openapp())
    bot.add_view(capp())
    bot.add_view(mysystem())
    bot.add_view(mainmanu())
    bot.add_view(sselenium())
    bot.add_view(dSettings())
    bot.add_view(out())
    channel = bot.get_channel(channelid)    
    async for message in channel.history(limit=None):
        await message.delete()
    await channel.send(embed=nextcord.Embed(title="Main Manu", color=0x04ff00), view=mainmanu())
    e=datetime.now()
    time=e.strftime("%I:%M:%S %p")
    today = date.today()
    d2 = today.strftime("%B %d, %Y")
    await logsend(embed=nextcord.Embed(title='open com '+d2+' | '+time, color=0x04ff00))
    print(f'BOT NAME : {bot.user}')
while yytt: 
    try:
        if yytt:
            try:
                bot.run(token)
            except:
                print('Config Error Bot Token')
                input()
                quit()
            try:getnamesyx()
            except:pass
    except:print('error');time.sleep(10)
